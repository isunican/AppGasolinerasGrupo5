Index: app/src/main/java/com/isunican/proyectobase/Views/FilterActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.isunican.proyectobase.Views;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport com.isunican.proyectobase.Model.*;\r\nimport com.isunican.proyectobase.R;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.EditText;\r\nimport android.widget.RadioButton;\r\nimport android.widget.Spinner;\r\nimport android.widget.Switch;\r\nimport android.widget.Toast;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class FilterActivity extends AppCompatActivity {\r\n\r\n    Spinner spinnerMarca;\r\n    Spinner spinnerProvincia;\r\n    ArrayList<Gasolinera> gasolineras;\r\n    ArrayList<String> marcas;\r\n    ArrayList<String> provincias;\r\n\r\n    CheckBox checkDistancia;\r\n    CheckBox checkPrecio;\r\n    CheckBox checkFavoritos;\r\n\r\n    RadioButton r_distancia_mayorA;\r\n    RadioButton r_distancia_menorA;\r\n\r\n    RadioButton r_precio_mayorAMenor;\r\n    RadioButton r_precio_menorAMayor;\r\n\r\n    EditText textNumberDistancia;\r\n\r\n    Switch switchGasoil;\r\n    Switch switchGasolina;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_filter);\r\n\r\n        spinnerMarca = findViewById(R.id.spinnerMarca);\r\n        spinnerProvincia = findViewById(R.id.spinnerProvincia);\r\n\r\n        switchGasoil = findViewById(R.id.switchGasoil);\r\n        //La opción de filtro por defecto debe ser Gasoil\r\n        switchGasoil.setChecked(true);\r\n\r\n        switchGasolina = findViewById(R.id.switchGasolina);\r\n\r\n        marcas = new ArrayList<String>();\r\n        provincias = new ArrayList<String>();\r\n\r\n        gasolineras = (ArrayList<Gasolinera>) getIntent().getSerializableExtra(\"list_gasolineras\");\r\n\r\n        //La primera opción debe ser \"nada seleccionado\"\r\n        marcas.add(\"Ninguna\");\r\n        provincias.add(\"Ninguna\");\r\n\r\n        //Rellenamos las listas locales para que tengan toda la información de marcas\r\n        //y provincias.\r\n        for (Gasolinera g : gasolineras) {\r\n            if (!marcas.contains(g.getRotulo())) {\r\n                marcas.add(g.getRotulo());\r\n            }\r\n\r\n            if (!provincias.contains(g.getProvincia())) {\r\n                provincias.add(g.getProvincia());\r\n            }\r\n        }\r\n\r\n        //Construimos el adapter del spinner de manera que éste tenga de posibles opciones seleccionables todas las marcas\r\n        ArrayAdapter<CharSequence> adpMarca = new ArrayAdapter(this, android.R.layout.simple_spinner_dropdown_item, marcas);\r\n        spinnerMarca.setAdapter(adpMarca);\r\n        //Opción por defecto: ninguna marca seleccionada\r\n        spinnerMarca.setSelection(0);\r\n\r\n        /**spinnerMarca.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n        @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n        //  TODO Acción para cuando se seleccione una opción del spinner\r\n        }\r\n\r\n        @Override public void onNothingSelected(AdapterView<?> parent) {\r\n        //TODO Acción para cuando se seleccione una opción del spinner\r\n        }\r\n        });**/\r\n\r\n        //Construimos el adapter del spinner de manera que éste tenga de posibles opciones seleccionables todas las marcas\r\n        ArrayAdapter<CharSequence> adpProvincia = new ArrayAdapter(this, android.R.layout.simple_spinner_dropdown_item, provincias);\r\n        spinnerProvincia.setAdapter(adpProvincia);\r\n        //Opción por defecto: ninguna provincia seleccionada\r\n        spinnerProvincia.setSelection(0);\r\n\r\n        /**spinnerProvincia.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n        @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n        //  TODO Acción para cuando se seleccione una opción del spinner\r\n        }\r\n\r\n        @Override public void onNothingSelected(AdapterView<?> parent) {\r\n        //TODO Acción para cuando se seleccione una opción del spinner\r\n        }\r\n        });**/\r\n\r\n        //Campo de texto en el que se especifica la distancia\r\n        textNumberDistancia = findViewById(R.id.editTextDistancia);\r\n        //Botones \"mayor que\" y \"menor que\"\r\n        r_distancia_mayorA = findViewById(R.id.radioButtonMayor);\r\n        r_distancia_menorA = findViewById(R.id.radioButtonMenor);\r\n\r\n        //Botones \"mayor a menor\" y \"menor a mayor\"\r\n        r_precio_mayorAMenor = findViewById(R.id.radioButtonAsc);\r\n        r_precio_menorAMayor = findViewById(R.id.radioButtonDesc);\r\n\r\n        //Inicialmente están desactivados, ya que no se ha especificado ningún filtro.\r\n        r_distancia_mayorA.setEnabled(false);\r\n        r_distancia_menorA.setEnabled(false);\r\n        textNumberDistancia.setEnabled(false);\r\n\r\n        r_precio_mayorAMenor.setEnabled(false);\r\n        r_precio_menorAMayor.setEnabled(false);\r\n\r\n        //CheckBox que indica si se está filtrando por distancia\r\n        checkDistancia = findViewById(R.id.checkDistancia);\r\n        //CheckBox que indica si se está filtrando por precio\r\n        checkPrecio = findViewById(R.id.checkPrecio);\r\n        //CheckBox que indica si se está filtrando por gasolineras guardadas como favoritas\r\n        checkFavoritos = findViewById(R.id.checkFavoritos);\r\n        //TODO De momento esta función está desactivada\r\n        checkFavoritos.setEnabled(false);\r\n\r\n        //Si el usuario indica que quiere filtrar por distancia, se habilitan los botones\r\n        //de selección de orden y la caja de texto.\r\n        checkDistancia.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                if (isChecked) {\r\n                    r_distancia_mayorA.setEnabled(true);\r\n                    r_distancia_menorA.setEnabled(true);\r\n                    textNumberDistancia.setEnabled(true);\r\n                } else {\r\n                    r_distancia_mayorA.setEnabled(false);\r\n                    r_distancia_menorA.setEnabled(false);\r\n                    textNumberDistancia.setEnabled(false);\r\n                }\r\n            }\r\n        });\r\n\r\n        //Si el usuario indica que quiere ordenar por precio, se habilitan los botones\r\n        //de selección de orden.\r\n        checkPrecio.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                if (isChecked) {\r\n                    r_precio_mayorAMenor.setEnabled(true);\r\n                    r_precio_menorAMayor.setEnabled(true);\r\n                } else {\r\n                    r_precio_mayorAMenor.setEnabled(false);\r\n                    r_precio_menorAMayor.setEnabled(false);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Se activa onClick() cuando se presiona el boton de Aceptar. Se pasa la configuracion de\r\n     * filtro seleccionada al view correspondiente(MainActivity).\r\n     * Y se cierra esta activity(FilterActivity).\r\n     *\r\n     * @param view\r\n     */\r\n    public void aceptarFiltros(View view) {\r\n        Filtro filtro = new Filtro(switchGasoil.isChecked(), switchGasolina.isChecked());\r\n        Intent intent = new Intent().putExtra(\"filtros\", filtro);\r\n        setResult(RESULT_OK, intent);\r\n        finish();\r\n    }\r\n\r\n    public void createConfirmationDialog() {\r\n        //Este AlertDialog será el que guarde el nombre que el usuario quiera darle a su configuración de filtros\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setMessage(\"Introduzca nombre para su configuración\");\r\n        builder.setTitle(\"Nombre de la configuración\");\r\n        final EditText nombreConfiguracion = new EditText(FilterActivity.this);\r\n        builder.setView(nombreConfiguracion);\r\n        builder.setPositiveButton(\"Sí\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                String nombre = nombreConfiguracion.getText().toString();\r\n                Toast toast;\r\n                if (nombre.isEmpty()) {\r\n                    toast = Toast.makeText(getApplicationContext(), \"Introduzca un nombre\", Toast.LENGTH_LONG);\r\n                } else {\r\n                    //TODO Habría que guardar ese nombre en algún lado\r\n                    toast = Toast.makeText(getApplicationContext(), \"Configuración guardada\", Toast.LENGTH_LONG);\r\n                }\r\n                toast.show();\r\n            }\r\n            });\r\n        builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                }\r\n            });\r\n        builder.create().show();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/isunican/proyectobase/Views/FilterActivity.java	(revision 64421a0d1b0874557bdcf32a2570b4f78799a965)
+++ app/src/main/java/com/isunican/proyectobase/Views/FilterActivity.java	(date 1604080121779)
@@ -212,6 +212,6 @@
                 }
             });
         builder.create().show();
-        }
-    }
-}
\ No newline at end of file
+    }
+}
+
